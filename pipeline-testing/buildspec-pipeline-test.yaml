version: 0.2

phases:
  install:
    runtime-versions:
      docker: 19
    commands:
      - TARGET_PREFIX=zzz-super-vpc
      
      # Gotta install AWS CLI v2
      - pip3 uninstall awscli -y
      - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      - unzip awscliv2.zip 1> /dev/null
      - ./aws/install
      - aws --version
      
      - curl --version

  pre_build:
    commands:
    
     # No pre_builds steps
     
  build:
    commands:
    
      # Set this in CodeBuild Environment Variable
      - echo $AWS_DEFAULT_REGION
      
      # Run the install
      - ./install.sh "$TARGET_PREFIX"
      
      # Wait 5 minutes.  Make sure there is VPC Flow Log data before we try to activate Athena
      - sleep 300
      
      # Count ENIs
      - VPCID=$(aws cloudformation list-exports --query "Exports[?Name=='$TARGET_PREFIX-VpcId'].Value" --output text)
      - echo "VPCID=$VPCID"
      - aws ec2 describe-network-interfaces --filter Name=vpc-id,Values=$VPCID --query "NetworkInterfaces[*].Description" 
      - ENI_COUNT=$(aws ec2 describe-network-interfaces --filter Name=vpc-id,Values=$VPCID --query "NetworkInterfaces[*].Description" --output text | tr -s '[:blank:]' '\n' | wc -l)
      - echo "ENI_COUNT=$ENI_COUNT"
      
      - aws ec2 describe-network-interfaces --filter Name=vpc-id,Values=$VPCID --query "NetworkInterfaces[*].Description" > report.txt
      - aws ec2 describe-network-interfaces --filter Name=vpc-id,Values=$VPCID >> report.txt
      
      # There should be 12 ENIs (NAT GW and VPC Interface Endpoint)
      - if [ $ENI_COUNT -ne 12 ]; then echo "Less (or more) than 12 ENIs - something wrong?... exiting..."; exit 1; fi

      # Setup Athena, wait 10 minutes. This could be a loop to wait for the stack to complete.
      - ./athena-query-setup.sh "$TARGET_PREFIX"
      - sleep 600
      
      # Run an Athena Query
           
  post_build:
    commands:
    
      # After all that , we wipe things clean back to where we started.
      # (It is a CI/CD Pipeline, after all)
      - ./uninstall.sh $TARGET_PREFIX --yes
      
artifacts:
  files:
    - report.txt 
